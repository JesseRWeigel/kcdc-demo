import { gql } from '@apollo/client'
import Head from 'next/head'
import Image from 'next/image'
import client from '../../apollo-client'
import styles from '../../styles/Home.module.css'
import { GET_POSTS } from '../index'
export default function Post({ data }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>WP + GraphQL React Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {data && (
        <main className={styles.main}>
          <h1 className={styles.title}>{data?.postBy?.title}</h1>
          <p dangerouslySetInnerHTML={{ __html: data?.postBy?.content }} />
        </main>
      )}

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
export async function getStaticProps({ params, preview = false, previewData }) {
  const { data } = await client.query({
    query: gql`query GetPost {
      postBy(slug: "${params.slug}") {
        content(format: RENDERED)
        title(format: RENDERED)
      }
    }`,
  })

  return {
    props: {
      data,
    },
  }
}

export async function getStaticPaths() {
  const allPosts = await client.query({ query: GET_POSTS })
  console.log(allPosts)
  return {
    paths:
      allPosts?.posts?.edges?.map(({ node }) => `/post/${node.slug}`) || [],
    fallback: true,
  }
}
